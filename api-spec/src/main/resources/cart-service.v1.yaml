openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v3
paths:
  /cart/{id}:
    get:
      tags:
      - cart-controller
      operationId: getCartById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CartDto'
    put:
      tags:
      - cart-controller
      operationId: updateCartById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartDto'
        required: true
      responses:
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CartDto'
    delete:
      tags:
      - cart-controller
      operationId: deleteCartById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "200":
          description: OK
  /cart:
    get:
      tags:
      - cart-controller
      operationId: getCarts
      responses:
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CartDto'
    post:
      tags:
      - cart-controller
      operationId: createCart
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartDto'
        required: true
      responses:
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CartDto'
components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        errorCode:
          type: integer
          format: int32
        message:
          type: string
        developerMessage:
          type: string
    CartDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        customerId:
          type: integer
          format: int64
        totalPrice:
          type: number
          format: double
        items:
          type: array
          items:
            $ref: '#/components/schemas/ItemDto'
    ItemDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        quantity:
          type: integer
          format: int32
        product:
          $ref: '#/components/schemas/ProductDto'
    ProductCategoryDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        category:
          type: string
        sku:
          type: string
    ProductDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        price:
          type: number
          format: double
        productCategory:
          $ref: '#/components/schemas/ProductCategoryDto'
